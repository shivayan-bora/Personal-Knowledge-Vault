{"pageProps":{"note":{"id":"8vel51jqushz1dd02xjix2d","title":"Element Interaction","desc":"","updated":1658937359929,"created":1658935364979,"custom":{},"fname":"cs.webdev.frontend.language.js.jsframework.react.test.tools.react-testing-library.element-interaction","type":"note","vault":{"fsPath":"vault"},"contentHash":"518c426ba19f54f03b4bfbf38744e5b0","links":[{"type":"wiki","from":{"fname":"cs.webdev.frontend.language.js.jsframework.react.test.tools.react-testing-library.element-interaction","id":"8vel51jqushz1dd02xjix2d","vaultName":"vault"},"value":"tags.todo","alias":"#todo","position":{"start":{"line":2,"column":99,"offset":99},"end":{"line":2,"column":104,"offset":104},"indent":[]},"xvault":false,"to":{"fname":"tags.todo"}}],"anchors":{},"children":[],"parent":"oq3rav3t80a0b8py80pwfsv","data":{}},"body":"<h1 id=\"element-interaction\">Element Interaction<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#element-interaction\"></a></h1>\n<p>To make interactions with our elements, we use the <code>fireEvent</code> method from React Testing Library. <a class=\"color-tag\" style=\"--tag-color: #9e0168;\" href=\"/Personal-Knowledge-Vault/notes/ouk0pw0z0byvj6fd8hvkize\">#todo</a></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should be able to type into the input element'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">AddInput</span>\n                todos<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n                setTodos<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>mockedSetTodo<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> inputElement <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getByPlaceholderText</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Add a new task here...</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Adding some value into an input text box</span>\n        <span class=\"token comment\">// First parameter is the target element in which we want to fire an event on</span>\n        <span class=\"token comment\">// Second is the value => Looks like event</span>\n        fireEvent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">change</span><span class=\"token punctuation\">(</span>inputElement<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'Go Grocery Shopping'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>inputElement<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Go Grocery Shopping'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should have an empty input when add button is clicked'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">AddInput</span>\n                todos<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n                setTodos<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>mockedSetTodo<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> inputElement <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getByPlaceholderText</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Add a new task here...</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> buttonElement <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getByRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Add</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        fireEvent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">change</span><span class=\"token punctuation\">(</span>inputElement<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'Go Grocery Shopping'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Clicks the button</span>\n        fireEvent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">click</span><span class=\"token punctuation\">(</span>buttonElement<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>inputElement<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>","noteIndex":{"id":"2rzu5qtc4erc8gkfiteeysj","title":"Root","desc":"","updated":1655457392891,"created":1652954242758,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"9a2bd52692d036217559f962a88e54f2","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":2},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":3}},"children":["nd2nkpjzc9hp9yhddsgf49w","djmknwf8xylsk3bwbyzgqwa","ygf9ydcqcmf3bdi4wyk3x58","2m3ygofcj8yajjevvh51ask","b9usa34mum3s56s60buxilt","witebak8d2ks87mmo9ofhui","wvvka5dtr8y49ssrhz0ja7d","moclflptspqmdjzdo2mo3x5","omuf127ul29qp4ebuvejtep"],"parent":null,"data":{},"body":"## Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n### Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"enableTaskNotes":true,"siteUrl":"https://shivayan-bora.github.io","assetsPrefix":"/Personal-Knowledge-Vault","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}