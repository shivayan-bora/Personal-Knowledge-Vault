{"pageProps":{"note":{"id":"ntdn6khcjk5sk1bns1hb2v2","title":"Angular","desc":"","updated":1663673367156,"created":1661747786147,"custom":{},"fname":"notes.angular","type":"note","vault":{"fsPath":"vault"},"contentHash":"dbb5a1ebcd5bff4847b94f8342d0b612","links":[{"type":"wiki","from":{"fname":"notes.angular","id":"ntdn6khcjk5sk1bns1hb2v2","vaultName":"vault"},"value":"user.NgModule","alias":"@NgModule","position":{"start":{"line":39,"column":3,"offset":1668},"end":{"line":39,"column":12,"offset":1677},"indent":[]},"xvault":false,"to":{"fname":"user.NgModule"}}],"anchors":{"why-angular":{"type":"header","text":"Why Angular","value":"why-angular","line":8,"column":0,"depth":3},"modules":{"type":"header","text":"Modules","value":"modules","line":24,"column":0,"depth":3},"getting-started":{"type":"header","text":"Getting Started","value":"getting-started","line":94,"column":0,"depth":3},"components":{"type":"header","text":"Components","value":"components","line":108,"column":0,"depth":3},"state":{"type":"header","text":"State","value":"state","line":132,"column":0,"depth":3},"event-handling":{"type":"header","text":"Event Handling","value":"event-handling","line":143,"column":0,"depth":3},"directives":{"type":"header","text":"Directives","value":"directives","line":145,"column":0,"depth":3}},"children":[],"parent":"2m3ygofcj8yajjevvh51ask","data":{}},"body":"<h1 id=\"angular\">Angular<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#angular\"></a></h1>\n<h3 id=\"why-angular\">Why Angular<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#why-angular\"></a></h3>\n<ol>\n<li>\n<p>Angular follows common and familiar enterprise patterns and conventions. This means if you have a background in Java or dotnet, and you're familiar or comfortable with the class based approach, you'll feel right at home with Angular. This can be seen from the fact that Angular is built on TypeScript, which is a superset of JavaScript that adds static typing and class based object oriented programming to the language.</p>\n</li>\n<li>\n<p>Angular is a batteries included framework. This means that you don't have to worry about the plumbing. Angular takes care of the plumbing for you. This includes things like routing, state management, and data fetching. This means that you can focus on the business logic of your application and not worry about the plumbing. Unlike React which needs a routing library like React Router, state management library like Redux, and data fetching library like Apollo, Angular takes care of all of this for you.</p>\n</li>\n<li>\n<p>Ships with tooling to accelerate the developer workflow. Angular CLI and NX Dev Tool.</p>\n</li>\n<li>\n<p>Rich and Vibrant ecosystem.</p>\n</li>\n<li>\n<p>Proven track record.</p>\n</li>\n</ol>\n<p><img src=\"/Personal-Knowledge-Vault/2022-09-08-16-31-59.png\" alt=\"AngularJS 1.x Big Picture\"></p>\n<p><img src=\"/Personal-Knowledge-Vault/2022-09-08-16-32-51.png\" alt=\"The Simpler Angular\"></p>\n<h3 id=\"modules\">Modules<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#modules\"></a></h3>\n<p>Two flavours inside Angular:</p>\n<ul>\n<li>ES6 Modules:\n<ul>\n<li>Organization at a language level.</li>\n<li>Uses ES6 Module Syntax.</li>\n<li>Modules export things that other modules can import.</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Component</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">OnInit</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ItemService</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Item</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'../shared'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\"><span class=\"token maybe-class-name\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">selector</span><span class=\"token operator\">:</span> <span class=\"token string\">'app-items'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">templateUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'./items.component.html'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">styleUrls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./items.component.css'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemsComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<ul>\n<li><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">@NgModule (Private)</a>:\n<ul>\n<li>Organization at a framework level.</li>\n<li>Tells Angular how to configure itself so that it knows what exists and how it needs to fit together.</li>\n<li><code>declarations</code> - Define view classes that are available to the module.</li>\n<li><code>imports</code> - Define a list of modules that the module needs.</li>\n<li><code>providers</code> - Define a list of services the module makes available.</li>\n<li><code>exports</code> - Define a list of modules the module makes available.</li>\n<li><code>bootstrap</code> - Define the component that should be bootstrapped.</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\">@<span class=\"token function\"><span class=\"token maybe-class-name\">NgModule</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Here's the modules we're importing</span>\n    <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token maybe-class-name\">BrowserModule</span><span class=\"token punctuation\">,</span> \n        <span class=\"token maybe-class-name\">AppRoutingModule</span><span class=\"token punctuation\">,</span> \n        <span class=\"token maybe-class-name\">BrowserAnimationsModule</span><span class=\"token punctuation\">,</span> \n        <span class=\"token maybe-class-name\">MaterialModule</span><span class=\"token punctuation\">,</span> \n        <span class=\"token maybe-class-name\">HttpClientModule</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Here's the components we're declaring</span>\n    <span class=\"token literal-property property\">declarations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppComponent</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">HomeComponent</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Here's the providors that we want to consume</span>\n    <span class=\"token literal-property property\">providers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n        <span class=\"token maybe-class-name\">AuthService</span><span class=\"token punctuation\">,</span> \n        <span class=\"token maybe-class-name\">NotificationService</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// We're going to bootstrap on the AppComponent</span>\n    <span class=\"token literal-property property\">bootstrap</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">AppComponent</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>At the very highest level, when we're spinning this application up, hen we tell Angulat to go ahead and bootstrap the AppModule:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> platformBrowserDynamic <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@angular/platform-browser-dynamic'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> enableProdMode <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> environment <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./environments/environment'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AppModule</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./app'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">.</span><span class=\"token property-access\">production</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">enableProdMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">platformBrowserDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bootstrapModule</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AppModule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Like React, Angular also consists of a tree shaped component hierarchy with the root module at the top which is the entry point (root <code>div</code> in React) and every other components as it's branches and leaves. This helps in promoting a unidirectional data flow from top to bottom (<code>props</code> in React). But then if there's an event, that can be propagated up the tree (Event Bubbling).</p>\n<h3 id=\"getting-started\">Getting Started<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#getting-started\"></a></h3>\n<p>Like Create React App, we have Angular CLI. Angular CLI enables us to use ng which is used for a lot of functionalities which will come later.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g @angular/cli\n</code></pre>\n<p>To create a new app:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">ng new my-first-project\n</code></pre>\n<h3 id=\"components\">Components<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#components\"></a></h3>\n<p>Like React, Angular also has a reusable component based structure for creating web apps.</p>\n<p>A component consists of three things:</p>\n<ol>\n<li>Component Class: Handles the data and functionality.</li>\n<li>HTML Template: Determines the structure of UI. (<code>app.component.html</code>)</li>\n<li>Component-specific styles: Defines the look and feel. (<code>app.component.css</code>)</li>\n</ol>\n<p>We can write global styles in <code>styles.css</code>.</p>\n<p>We use <code>class</code> to bind classes to the template.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>product<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">[class.selected]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>product.isSelected<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>In React we do the same by:</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">product </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>product<span class=\"token punctuation\">.</span><span class=\"token property-access\">isSelected</span> <span class=\"token operator\">?</span> <span class=\"token string\">'selected'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h3 id=\"state\">State<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#state\"></a></h3>\n<p>The state of a component is the data that it holds. In Angular, we can store the state of a component in a class property. We can then use this property in the template to display the data. It is stored in <code>app.component.ts</code>:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">newMemberName</span><span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">members</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"event-handling\">Event Handling<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#event-handling\"></a></h3>\n<h3 id=\"directives\">Directives<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#directives\"></a></h3>\n<p>In angular, we have structural directives which are used to change the structure of the DOM. Structural directives are denoted by <code>*</code> in the template. For example, <code>*ngIf</code> is used to conditionally render a component.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">*ngIf</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isUserLoggedIn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Welcome to the app<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>In React we do the same by:</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>isUserLoggedIn <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Welcome to the app</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Angular also has a similar syntax for conditional rendering.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">[hidden]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>!isUserLoggedIn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Welcome to the app<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>For repeating a component, we use <code>*ngFor</code> in Angular.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>let product of products<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>We do the same in React by:</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>products<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product</span> <span class=\"token arrow operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>product<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Interpolation is used to bind data to the template. We use <code>{{}}</code> to do the same.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{product}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>We do the same in React by:</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>product<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>","noteIndex":{"id":"2rzu5qtc4erc8gkfiteeysj","title":"Root","desc":"","updated":1655457392891,"created":1652954242758,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"9a2bd52692d036217559f962a88e54f2","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":2},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":3}},"children":["nd2nkpjzc9hp9yhddsgf49w","djmknwf8xylsk3bwbyzgqwa","ygf9ydcqcmf3bdi4wyk3x58","2m3ygofcj8yajjevvh51ask","b9usa34mum3s56s60buxilt","witebak8d2ks87mmo9ofhui","wvvka5dtr8y49ssrhz0ja7d","moclflptspqmdjzdo2mo3x5","omuf127ul29qp4ebuvejtep"],"parent":null,"data":{},"body":"## Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n### Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"enableTaskNotes":true,"siteUrl":"https://shivayan-bora.github.io","assetsPrefix":"/Personal-Knowledge-Vault","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}