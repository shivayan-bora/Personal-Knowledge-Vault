{"pageProps":{"note":{"id":"c7pxtfwojkk40aky9h5b55o","title":"Async Tests","desc":"","updated":1658985823220,"created":1658981933623,"custom":{},"fname":"cs.webdev.frontend.language.js.jsframework.react.test.tools.react-testing-library.async-tests","type":"note","vault":{"fsPath":"vault"},"contentHash":"2964e95fb1a66154e91b1e6854a6747f","links":[{"type":"wiki","from":{"fname":"cs.webdev.frontend.language.js.jsframework.react.test.tools.react-testing-library.async-tests","id":"c7pxtfwojkk40aky9h5b55o","vaultName":"vault"},"value":"tags.todo","alias":"#todo","position":{"start":{"line":73,"column":99,"offset":2217},"end":{"line":73,"column":104,"offset":2222},"indent":[]},"xvault":false,"to":{"fname":"tags.todo"}}],"anchors":{},"children":[],"parent":"oq3rav3t80a0b8py80pwfsv","data":{}},"body":"<h1 id=\"async-tests\">Async Tests<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#async-tests\"></a></h1>\n<p><img src=\"/Personal-Knowledge-Vault/assets/images/2022-07-28-09-58-57.png\" alt=\"Problem with async requests in tests\"></p>\n<p>To test async operations, we face the following problems:</p>\n<ol>\n<li>Requests cost money either to us or the provider of the API.</li>\n<li>Requests can be slow depending on the API.</li>\n<li>Our tests are dependent on something that's external.</li>\n</ol>\n<p>To fix this, we can mock our API requests so that we are not dependent on an external source.</p>\n<p>For mocking, we do the following.</p>\n<ol>\n<li>In this example, we would be mocking axios. Firstly, we need to create a folder called <code>__mocks__</code>.</li>\n<li>Then we create a file called axios.js. <strong>Please note that the name of the file and the folder is very important.</strong></li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> mockResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">results</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">first</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Laith\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">last</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Harb\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">picture</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">large</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://randomuser.me/api/portraits/men/59.jpg\"</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">login</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ThePhonyGOAT\"</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">get</span><span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mockResolvedValue</span><span class=\"token punctuation\">(</span>mockResponse<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><code>jest.fn()</code> is used to create mock functions.</p>\n<p>For capturing elements dependent on an async API call, we need to use <code>findBy</code> as follows:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">MockFollowersList</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">BrowserRouter</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">FollowersList</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token maybe-class-name\">BrowserRouter</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FollowersList'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should render the followers list card'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">MockFollowersList</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> followerDivElement <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> screen<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">findByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'follower-item-0'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>followerDivElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Still here it won't work as React Scripts reset our mocks on every render. To make sure this doesn't happen, there's a way to test:</p>\n<ol>\n<li>Go to the path: <code>node_modules/react-scripts/scripts/utils/createJestConfig.js</code>.</li>\n<li>Search for the <code>resetMocks</code> which would be set to <code>true</code>. It's usually in a <code>config</code> object and on line 69.</li>\n<li>Set it's value to <code>false</code> and restart your test runner.</li>\n</ol>\n<p>Although this method isn't recommended and we need to find an alternative or check if it's fixed. <a class=\"color-tag\" style=\"--tag-color: #9e0168;\" href=\"/Personal-Knowledge-Vault/notes/ouk0pw0z0byvj6fd8hvkize\">#todo</a></p>","noteIndex":{"id":"2rzu5qtc4erc8gkfiteeysj","title":"Root","desc":"","updated":1655457392891,"created":1652954242758,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"9a2bd52692d036217559f962a88e54f2","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":2},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":3}},"children":["nd2nkpjzc9hp9yhddsgf49w","djmknwf8xylsk3bwbyzgqwa","ygf9ydcqcmf3bdi4wyk3x58","2m3ygofcj8yajjevvh51ask","b9usa34mum3s56s60buxilt","witebak8d2ks87mmo9ofhui","wvvka5dtr8y49ssrhz0ja7d","moclflptspqmdjzdo2mo3x5","omuf127ul29qp4ebuvejtep"],"parent":null,"data":{},"body":"## Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n### Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"enableTaskNotes":true,"siteUrl":"https://shivayan-bora.github.io","assetsPrefix":"/Personal-Knowledge-Vault","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}